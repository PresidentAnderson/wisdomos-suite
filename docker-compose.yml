version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: wisdomos_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: wisdomos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - wisdomos_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d wisdomos"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true

  # Redis (optional - for future caching/sessions)
  redis:
    image: redis:7-alpine
    container_name: wisdomos_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - wisdomos_network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    security_opt:
      - no-new-privileges:true

  # WisdomOS Web Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    image: wisdomos-web:latest
    container_name: wisdomos_app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/wisdomos?schema=public
      - JWT_SECRET=${JWT_SECRET:-local-development-secret-change-in-production}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      - REDIS_URL=redis://${REDIS_PASSWORD:+:${REDIS_PASSWORD}@}redis:6379
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - wisdomos_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Development Environment (for local development without Docker app)
  app-dev:
    image: node:20-alpine
    container_name: wisdomos_dev
    working_dir: /app
    ports:
      - "${DEV_PORT:-3001}:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/wisdomos?schema=public
      - JWT_SECRET=${JWT_SECRET:-local-development-secret}
      - NEXT_PUBLIC_APP_URL=${DEV_APP_URL:-http://localhost:3001}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - wisdomos_network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: sh -c "npm install && npm run dev"
    profiles:
      - dev
    security_opt:
      - no-new-privileges:true

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  wisdomos_network:
    driver: bridge
    name: wisdomos_network