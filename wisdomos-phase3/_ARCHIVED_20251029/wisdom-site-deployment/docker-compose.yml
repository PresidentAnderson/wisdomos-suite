# Docker Compose for WisdomOS Development
version: '3.8'

services:
  wisdomos:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - ./public:/app/public:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wisdomos.rule=Host(`wisdomos.local`)"
      - "traefik.http.services.wisdomos.loadbalancer.server.port=3000"

  # Optional: PostgreSQL database for future full-stack features
  # database:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: wisdomos
  #     POSTGRES_USER: wisdomos
  #     POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U wisdomos"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Optional: Redis for caching
  # cache:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis_data:/data
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 5

# volumes:
#   postgres_data:
#   redis_data: