version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: wisdomos-db
    environment:
      POSTGRES_DB: wisdomos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - wisdomos-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: wisdomos-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - wisdomos-network
    restart: unless-stopped

  # API Service
  api:
    build:
      context: .
      target: api
    container_name: wisdomos-api
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD:-postgres}@db:5432/wisdomos
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
      MASTER_ENCRYPTION_KEY: ${MASTER_ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "3001:3001"
    depends_on:
      - db
      - redis
    networks:
      - wisdomos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Application
  web:
    build:
      context: .
      target: web
    container_name: wisdomos-web
    environment:
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_SUPABASE_URL: ${SUPABASE_URL}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      NEXT_PUBLIC_API_URL: ${API_URL:-http://localhost:3001}
      NEXT_PUBLIC_COMMUNITY_URL: ${COMMUNITY_URL:-http://localhost:3002}
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - wisdomos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Community Hub
  community:
    build:
      context: .
      target: community
    container_name: wisdomos-community
    environment:
      NODE_ENV: production
      PORT: 3002
      NEXT_PUBLIC_SUPABASE_URL: ${SUPABASE_URL}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      NEXT_PUBLIC_API_URL: ${API_URL:-http://localhost:3001}
    ports:
      - "3002:3002"
    depends_on:
      - api
    networks:
      - wisdomos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: wisdomos-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
      - community
      - api
    networks:
      - wisdomos-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  wisdomos-network:
    driver: bridge