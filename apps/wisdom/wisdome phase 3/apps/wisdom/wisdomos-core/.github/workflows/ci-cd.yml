name: 🔥 WisdomOS Core - CI/CD Pipeline

on:
  push:
    branches: [ main, develop, staging ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - '.gitignore'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - '.gitignore'
  release:
    types: [ published ]

# Cancel previous workflow runs for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '18'
  NPM_REGISTRY: 'https://registry.npmjs.org'

jobs:
  # ========================================
  # Code Quality & Security Checks
  # ========================================
  
  quality:
    name: 🔍 Quality & Security
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: ${{ env.NPM_REGISTRY }}

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔒 Audit dependencies
        run: npm audit --audit-level high

      - name: 📊 Type checking
        run: npm run typecheck

      - name: 🎨 Code formatting check
        run: npx prettier --check "src/**/*.{ts,js,json}"

      - name: 🧹 Lint code
        run: npm run lint:check

      - name: 📈 SonarCloud Scan
        if: github.actor != 'dependabot[bot]'
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: 🛡️ CodeQL Security Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: typescript

      - name: 🏗️ Build for CodeQL
        run: npm run build

      - name: 🛡️ Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # ========================================
  # Test Suite
  # ========================================
  
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🧪 Run unit tests
        run: npm run test:coverage

      - name: 📊 Upload coverage to Codecov
        if: matrix.node-version == 18
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: wisdomos-core
          name: WisdomOS Core Coverage
          fail_ci_if_error: true

      - name: 📈 Coverage Report
        if: matrix.node-version == 18
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info
          delete-old-comments: true

  # ========================================
  # Build & Package
  # ========================================
  
  build:
    name: 🏗️ Build & Package
    runs-on: ubuntu-latest
    needs: [quality, test]
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: ${{ env.NPM_REGISTRY }}

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔨 Build library
        run: npm run build

      - name: 📦 Pack library
        run: npm pack

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wisdomos-core-build
          path: |
            dist/
            *.tgz
          retention-days: 7

      - name: 📊 Bundle analyzer
        run: npx bundlesize

  # ========================================
  # Security Scanning
  # ========================================
  
  security:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    needs: [quality]
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔒 Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: 🛡️ OSSAR Security Scan
        uses: github/ossar-action@v1
        id: ossar

      - name: 📤 Upload OSSAR results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ${{ steps.ossar.outputs.sarifFile }}

  # ========================================
  # Release & Publish
  # ========================================
  
  publish:
    name: 📦 Publish Package
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.event_name == 'release' && github.event.action == 'published'
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: ${{ env.NPM_REGISTRY }}

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔨 Build library
        run: npm run build

      - name: 🏷️ Update version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          npm version $VERSION --no-git-tag-version

      - name: 📦 Publish to NPM
        run: npm publish --access restricted
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📦 Publish to GitHub Packages
        run: |
          echo "@wisdomos:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          npm publish --access restricted
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📊 Create Release Notes
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const changelog = fs.readFileSync('CHANGELOG.md', 'utf8');
            const release = context.payload.release;
            const version = release.tag_name;
            
            // Extract changelog for this version
            const versionRegex = new RegExp(`## \\[${version}\\]([\\s\\S]*?)(?=## \\[|$)`);
            const match = changelog.match(versionRegex);
            const releaseNotes = match ? match[1].trim() : 'No changelog available.';
            
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.id,
              body: releaseNotes
            });

  # ========================================
  # Deployment Notification
  # ========================================
  
  notify:
    name: 📢 Notify Deployment
    runs-on: ubuntu-latest
    needs: [publish]
    if: always()
    
    steps:
      - name: 🟢 Success Notification
        if: needs.publish.result == 'success'
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#deployments'
          text: |
            🎉 *WisdomOS Core* successfully published!
            📦 Version: ${{ github.ref_name }}
            👤 Author: ${{ github.actor }}
            🔗 Release: ${{ github.event.release.html_url }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: 🔴 Failure Notification
        if: needs.publish.result == 'failure'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#deployments'
          text: |
            ❌ *WisdomOS Core* publication failed!
            📦 Version: ${{ github.ref_name }}
            👤 Author: ${{ github.actor }}
            🔗 Workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}